[
    {
        "url": "https://api.github.com/repos/facebook/react/issues/comments/38728605",
        "html_url": "https://github.com/facebook/react/issues/1252#issuecomment-38728605",
        "issue_url": "https://api.github.com/repos/facebook/react/issues/1252",
        "id": 38728605,
        "user": {
            "login": "matthewwithanm",
            "id": 126263,
            "avatar_url": "https://avatars0.githubusercontent.com/u/126263?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matthewwithanm",
            "html_url": "https://github.com/matthewwithanm",
            "followers_url": "https://api.github.com/users/matthewwithanm/followers",
            "following_url": "https://api.github.com/users/matthewwithanm/following{/other_user}",
            "gists_url": "https://api.github.com/users/matthewwithanm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/matthewwithanm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matthewwithanm/subscriptions",
            "organizations_url": "https://api.github.com/users/matthewwithanm/orgs",
            "repos_url": "https://api.github.com/users/matthewwithanm/repos",
            "events_url": "https://api.github.com/users/matthewwithanm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/matthewwithanm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-03-26T19:28:49Z",
        "updated_at": "2014-03-26T19:28:49Z",
        "author_association": "MEMBER",
        "body": "Now that we have `renderComponentToStaticMarkup`, maybe the best solution for this is just to do:\n\n```\n<noscript dangerouslySetInnerHTML={{__html: React.renderComponentToStaticMarkup(c)}} />\n```\n\nwhere `c` is the component you want to render for people without JS.\n"
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/comments/38730974",
        "html_url": "https://github.com/facebook/react/issues/1252#issuecomment-38730974",
        "issue_url": "https://api.github.com/repos/facebook/react/issues/1252",
        "id": 38730974,
        "user": {
            "login": "sophiebits",
            "id": 6820,
            "avatar_url": "https://avatars2.githubusercontent.com/u/6820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sophiebits",
            "html_url": "https://github.com/sophiebits",
            "followers_url": "https://api.github.com/users/sophiebits/followers",
            "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
            "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
            "organizations_url": "https://api.github.com/users/sophiebits/orgs",
            "repos_url": "https://api.github.com/users/sophiebits/repos",
            "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sophiebits/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-03-26T19:49:54Z",
        "updated_at": "2014-03-26T19:49:54Z",
        "author_association": "MEMBER",
        "body": "We should just make noscript do this automatically, sort of like our existing wrappers for input, select, and textarea. Want to take a crack at it?\n"
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/comments/38735823",
        "html_url": "https://github.com/facebook/react/issues/1252#issuecomment-38735823",
        "issue_url": "https://api.github.com/repos/facebook/react/issues/1252",
        "id": 38735823,
        "user": {
            "login": "matthewwithanm",
            "id": 126263,
            "avatar_url": "https://avatars0.githubusercontent.com/u/126263?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matthewwithanm",
            "html_url": "https://github.com/matthewwithanm",
            "followers_url": "https://api.github.com/users/matthewwithanm/followers",
            "following_url": "https://api.github.com/users/matthewwithanm/following{/other_user}",
            "gists_url": "https://api.github.com/users/matthewwithanm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/matthewwithanm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matthewwithanm/subscriptions",
            "organizations_url": "https://api.github.com/users/matthewwithanm/orgs",
            "repos_url": "https://api.github.com/users/matthewwithanm/repos",
            "events_url": "https://api.github.com/users/matthewwithanm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/matthewwithanm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-03-26T20:33:55Z",
        "updated_at": "2014-03-26T20:33:55Z",
        "author_association": "MEMBER",
        "body": "Sure. I'll try to get a PR in soon.\n"
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/comments/73016580",
        "html_url": "https://github.com/facebook/react/issues/1252#issuecomment-73016580",
        "issue_url": "https://api.github.com/repos/facebook/react/issues/1252",
        "id": 73016580,
        "user": {
            "login": "andygeers",
            "id": 1673899,
            "avatar_url": "https://avatars0.githubusercontent.com/u/1673899?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andygeers",
            "html_url": "https://github.com/andygeers",
            "followers_url": "https://api.github.com/users/andygeers/followers",
            "following_url": "https://api.github.com/users/andygeers/following{/other_user}",
            "gists_url": "https://api.github.com/users/andygeers/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andygeers/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andygeers/subscriptions",
            "organizations_url": "https://api.github.com/users/andygeers/orgs",
            "repos_url": "https://api.github.com/users/andygeers/repos",
            "events_url": "https://api.github.com/users/andygeers/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andygeers/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-02-05T09:21:23Z",
        "updated_at": "2015-02-05T09:21:23Z",
        "author_association": "NONE",
        "body": "I'd love it if somebody could revisit this issue - it's a real pain to have to use the workaround\n"
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/comments/73017611",
        "html_url": "https://github.com/facebook/react/issues/1252#issuecomment-73017611",
        "issue_url": "https://api.github.com/repos/facebook/react/issues/1252",
        "id": 73017611,
        "user": {
            "login": "syranide",
            "id": 1714255,
            "avatar_url": "https://avatars1.githubusercontent.com/u/1714255?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/syranide",
            "html_url": "https://github.com/syranide",
            "followers_url": "https://api.github.com/users/syranide/followers",
            "following_url": "https://api.github.com/users/syranide/following{/other_user}",
            "gists_url": "https://api.github.com/users/syranide/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/syranide/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/syranide/subscriptions",
            "organizations_url": "https://api.github.com/users/syranide/orgs",
            "repos_url": "https://api.github.com/users/syranide/repos",
            "events_url": "https://api.github.com/users/syranide/events{/privacy}",
            "received_events_url": "https://api.github.com/users/syranide/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-02-05T09:29:30Z",
        "updated_at": "2015-02-05T09:32:49Z",
        "author_association": "CONTRIBUTOR",
        "body": "Related #1905 ... should we even set the content of `<noscript>` client-side? (Or technically even render it when React is able to) It's a perf hit and I can't think of a reason you would ever care about the contents of the `<noscript>` when client-side?\n\n**PS.** I feel like there's something dirty about `renderToStaticMarkup` happening behind the scenes. Wouldn't it make more sense to just disallow children and if people want the implicit behavior it should be wrapped up in a custom component?\n"
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/comments/73039780",
        "html_url": "https://github.com/facebook/react/issues/1252#issuecomment-73039780",
        "issue_url": "https://api.github.com/repos/facebook/react/issues/1252",
        "id": 73039780,
        "user": {
            "login": "matthewwithanm",
            "id": 126263,
            "avatar_url": "https://avatars0.githubusercontent.com/u/126263?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matthewwithanm",
            "html_url": "https://github.com/matthewwithanm",
            "followers_url": "https://api.github.com/users/matthewwithanm/followers",
            "following_url": "https://api.github.com/users/matthewwithanm/following{/other_user}",
            "gists_url": "https://api.github.com/users/matthewwithanm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/matthewwithanm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matthewwithanm/subscriptions",
            "organizations_url": "https://api.github.com/users/matthewwithanm/orgs",
            "repos_url": "https://api.github.com/users/matthewwithanm/repos",
            "events_url": "https://api.github.com/users/matthewwithanm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/matthewwithanm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-02-05T12:40:06Z",
        "updated_at": "2015-02-05T12:40:06Z",
        "author_association": "MEMBER",
        "body": "Yeah, I think I suggested ignoring `<noscript>` contents on the client in #1253, but it would cause checksum issues with SSR if I'm not mistaken.\n\nAs for rendering to a string, it may be dirty but, in my opinion, it's the acceptable kind of dirtiness since it protects the user from the inherent complexity of dealing with a wonky browser bug. I guess you could argue that `<noscript>` should have a CDATA child (that just happens to be a string of HTML) and not actual DOM children, so it's outside the purview of React, but that seems to make it largely useless without that custom component.\n"
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/comments/73040640",
        "html_url": "https://github.com/facebook/react/issues/1252#issuecomment-73040640",
        "issue_url": "https://api.github.com/repos/facebook/react/issues/1252",
        "id": 73040640,
        "user": {
            "login": "syranide",
            "id": 1714255,
            "avatar_url": "https://avatars1.githubusercontent.com/u/1714255?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/syranide",
            "html_url": "https://github.com/syranide",
            "followers_url": "https://api.github.com/users/syranide/followers",
            "following_url": "https://api.github.com/users/syranide/following{/other_user}",
            "gists_url": "https://api.github.com/users/syranide/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/syranide/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/syranide/subscriptions",
            "organizations_url": "https://api.github.com/users/syranide/orgs",
            "repos_url": "https://api.github.com/users/syranide/repos",
            "events_url": "https://api.github.com/users/syranide/events{/privacy}",
            "received_events_url": "https://api.github.com/users/syranide/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-02-05T12:47:55Z",
        "updated_at": "2015-02-05T12:47:55Z",
        "author_association": "CONTRIBUTOR",
        "body": "@matthewwithanm Oh right, yeah, reusing client-side would require a special flag internally which would use server-rendering rules when constructing the initial markup.\n"
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/comments/76544408",
        "html_url": "https://github.com/facebook/react/issues/1252#issuecomment-76544408",
        "issue_url": "https://api.github.com/repos/facebook/react/issues/1252",
        "id": 76544408,
        "user": {
            "login": "defrex",
            "id": 57580,
            "avatar_url": "https://avatars2.githubusercontent.com/u/57580?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/defrex",
            "html_url": "https://github.com/defrex",
            "followers_url": "https://api.github.com/users/defrex/followers",
            "following_url": "https://api.github.com/users/defrex/following{/other_user}",
            "gists_url": "https://api.github.com/users/defrex/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/defrex/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/defrex/subscriptions",
            "organizations_url": "https://api.github.com/users/defrex/orgs",
            "repos_url": "https://api.github.com/users/defrex/repos",
            "events_url": "https://api.github.com/users/defrex/events{/privacy}",
            "received_events_url": "https://api.github.com/users/defrex/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-02-28T20:29:45Z",
        "updated_at": "2015-02-28T20:29:45Z",
        "author_association": "NONE",
        "body": "For future searchers, here is this workaround wrapped up into a component. In this case set up as an ES6 CommonJS module that relies on the constant `process.browser`. Adapt as needed.\n\n``` javascript\n\nconst React = require('react/addons');\n\nmodule.exports = React.createClass({\n  displayName: 'NoScript',\n  mixins: [React.PureRenderMixin],\n  render() {\n    if (process.browser)\n      return <noscript/>;\n    else\n      return <noscript dangerouslySetInnerHTML={\n        {__html: React.renderToStaticMarkup(this.props.children)}\n      }/>;\n  }\n});\n```\n"
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/comments/163156236",
        "html_url": "https://github.com/facebook/react/issues/1252#issuecomment-163156236",
        "issue_url": "https://api.github.com/repos/facebook/react/issues/1252",
        "id": 163156236,
        "user": {
            "login": "Jpunt",
            "id": 190501,
            "avatar_url": "https://avatars1.githubusercontent.com/u/190501?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jpunt",
            "html_url": "https://github.com/Jpunt",
            "followers_url": "https://api.github.com/users/Jpunt/followers",
            "following_url": "https://api.github.com/users/Jpunt/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jpunt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jpunt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jpunt/subscriptions",
            "organizations_url": "https://api.github.com/users/Jpunt/orgs",
            "repos_url": "https://api.github.com/users/Jpunt/repos",
            "events_url": "https://api.github.com/users/Jpunt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jpunt/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-09T09:08:04Z",
        "updated_at": "2015-12-09T09:08:04Z",
        "author_association": "NONE",
        "body": "I'd like to use this workaround, but it seems to be deprecated:\n\n``` js\nWarning: React.renderToStaticMarkup is deprecated. Please use ReactDOMServer.renderToStaticMarkup from require('react-dom/server') instead.\n```\n\nI'm guessing that `ReactDOMServer` is not available on the client. So, now what?\n"
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/comments/179884840",
        "html_url": "https://github.com/facebook/react/issues/1252#issuecomment-179884840",
        "issue_url": "https://api.github.com/repos/facebook/react/issues/1252",
        "id": 179884840,
        "user": {
            "login": "benkeen",
            "id": 512116,
            "avatar_url": "https://avatars0.githubusercontent.com/u/512116?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benkeen",
            "html_url": "https://github.com/benkeen",
            "followers_url": "https://api.github.com/users/benkeen/followers",
            "following_url": "https://api.github.com/users/benkeen/following{/other_user}",
            "gists_url": "https://api.github.com/users/benkeen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benkeen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benkeen/subscriptions",
            "organizations_url": "https://api.github.com/users/benkeen/orgs",
            "repos_url": "https://api.github.com/users/benkeen/repos",
            "events_url": "https://api.github.com/users/benkeen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benkeen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-04T15:01:28Z",
        "updated_at": "2016-02-04T15:01:28Z",
        "author_association": "CONTRIBUTOR",
        "body": "@Jpunt me too. Being able to convert a React component to static markup on the client came in handy sometimes.\n"
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/comments/179886461",
        "html_url": "https://github.com/facebook/react/issues/1252#issuecomment-179886461",
        "issue_url": "https://api.github.com/repos/facebook/react/issues/1252",
        "id": 179886461,
        "user": {
            "login": "jimfb",
            "id": 9595985,
            "avatar_url": "https://avatars3.githubusercontent.com/u/9595985?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jimfb",
            "html_url": "https://github.com/jimfb",
            "followers_url": "https://api.github.com/users/jimfb/followers",
            "following_url": "https://api.github.com/users/jimfb/following{/other_user}",
            "gists_url": "https://api.github.com/users/jimfb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jimfb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jimfb/subscriptions",
            "organizations_url": "https://api.github.com/users/jimfb/orgs",
            "repos_url": "https://api.github.com/users/jimfb/repos",
            "events_url": "https://api.github.com/users/jimfb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jimfb/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-04T15:03:56Z",
        "updated_at": "2016-02-04T15:04:28Z",
        "author_association": "CONTRIBUTOR",
        "body": "@Jpunt @benkeen\n\n`ReactDOMServer.renderToStaticMarkup()` is available on the client side if you include `<script src=\"https://fb.me/react-dom-server-0.14.7.js\"></script>`\n"
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/comments/179888171",
        "html_url": "https://github.com/facebook/react/issues/1252#issuecomment-179888171",
        "issue_url": "https://api.github.com/repos/facebook/react/issues/1252",
        "id": 179888171,
        "user": {
            "login": "benkeen",
            "id": 512116,
            "avatar_url": "https://avatars0.githubusercontent.com/u/512116?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benkeen",
            "html_url": "https://github.com/benkeen",
            "followers_url": "https://api.github.com/users/benkeen/followers",
            "following_url": "https://api.github.com/users/benkeen/following{/other_user}",
            "gists_url": "https://api.github.com/users/benkeen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benkeen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benkeen/subscriptions",
            "organizations_url": "https://api.github.com/users/benkeen/orgs",
            "repos_url": "https://api.github.com/users/benkeen/repos",
            "events_url": "https://api.github.com/users/benkeen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benkeen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-04T15:08:09Z",
        "updated_at": "2016-02-04T15:08:09Z",
        "author_association": "CONTRIBUTOR",
        "body": "@jimfb you da MAN. Thanks, that's very helpful!\n"
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/comments/211404036",
        "html_url": "https://github.com/facebook/react/issues/1252#issuecomment-211404036",
        "issue_url": "https://api.github.com/repos/facebook/react/issues/1252",
        "id": 211404036,
        "user": {
            "login": "srcspider",
            "id": 338910,
            "avatar_url": "https://avatars2.githubusercontent.com/u/338910?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/srcspider",
            "html_url": "https://github.com/srcspider",
            "followers_url": "https://api.github.com/users/srcspider/followers",
            "following_url": "https://api.github.com/users/srcspider/following{/other_user}",
            "gists_url": "https://api.github.com/users/srcspider/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/srcspider/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/srcspider/subscriptions",
            "organizations_url": "https://api.github.com/users/srcspider/orgs",
            "repos_url": "https://api.github.com/users/srcspider/repos",
            "events_url": "https://api.github.com/users/srcspider/events{/privacy}",
            "received_events_url": "https://api.github.com/users/srcspider/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-18T14:28:45Z",
        "updated_at": "2016-04-18T14:28:45Z",
        "author_association": "NONE",
        "body": "`noscript` is a very critical component even for a javascript-dependent application. If anything even the utility it provides (eg. \"you need javascript to use this page\") is even more essential to javascript-only pages then normal ones.\n\n@Jpunt @jimfb ( /cc @benkeen  )\n\nMaybe there are uses for rendering static markup on the client but `noscript` is not one of them. \n\nIf react is running then the `noscript` is clearly useless now since javascript is enabled in the browser and hence the contents of the `noscript` may as well not exist. The only reason a `noscript` tag even makes sense to generate (instead of just returning `null`) is to avoid an invariant error because react expects it from the server side.\n\n``` js\nvar React = require('react');\n\nvar is = {\n    browser: require('lib/is/browser')\n};\n\nvar ReactDOM;\nif ( ! is.browser()) {\n    ReactDOM = require('react-dom/server')\n}\n\nvar NoScript = React.createClass({\n\n    mixins: [ React.PureRenderMixin ],\n\n    render: function () {\n        if (is.browser()) {\n            return <noscript/>;\n        }\n        else { // on server\n            return <noscript dangerouslySetInnerHTML={\n                { __html: ReactDOM.renderToStaticMarkup(this.props.children) }\n            } />;\n        }\n    }\n\n});\n\nmodule.exports = NoScript;\n```\n\nYou'll want to alias the react server code to resolve to empty module since it's unlikely you're bundler will figure it out on it's own; not with out some other rules in place anyway. If you use webpack add the following to your configuration:\n\n``` js\nresolve: {\n    alias: {\n        \"react-dom/server\": \"empty-module\"\n    }\n},\n```\n\nAnd make sure you have `empty-module` on your load paths. I recommend you do `npm i -D empty-module`, since a dependency is clearer (and cleaner) then an empty file in the project.\n"
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/comments/243426970",
        "html_url": "https://github.com/facebook/react/issues/1252#issuecomment-243426970",
        "issue_url": "https://api.github.com/repos/facebook/react/issues/1252",
        "id": 243426970,
        "user": {
            "login": "wchargin",
            "id": 4317806,
            "avatar_url": "https://avatars3.githubusercontent.com/u/4317806?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wchargin",
            "html_url": "https://github.com/wchargin",
            "followers_url": "https://api.github.com/users/wchargin/followers",
            "following_url": "https://api.github.com/users/wchargin/following{/other_user}",
            "gists_url": "https://api.github.com/users/wchargin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wchargin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wchargin/subscriptions",
            "organizations_url": "https://api.github.com/users/wchargin/orgs",
            "repos_url": "https://api.github.com/users/wchargin/repos",
            "events_url": "https://api.github.com/users/wchargin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wchargin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-30T12:47:19Z",
        "updated_at": "2016-08-30T12:47:19Z",
        "author_association": "NONE",
        "body": "@srcspider: Could you explain why you choose to render an empty noscript on the client instead of the same noscript with dangerouslySetInnerHTML? When I try to do this I get a server-side rendering mismatch\n\n```\n (client) t data-reactid=\"25\"></noscript><div clas\n (server) t data-reactid=\"25\">&lt;div&gt;&lt;secti\n```\n\nwhich totally makes sense.\n\nRendering the static HTML in all cases works for me, and should be fine performance-wise with the pure-render decorator.\n"
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/comments/246161590",
        "html_url": "https://github.com/facebook/react/issues/1252#issuecomment-246161590",
        "issue_url": "https://api.github.com/repos/facebook/react/issues/1252",
        "id": 246161590,
        "user": {
            "login": "BabakMN",
            "id": 888936,
            "avatar_url": "https://avatars3.githubusercontent.com/u/888936?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BabakMN",
            "html_url": "https://github.com/BabakMN",
            "followers_url": "https://api.github.com/users/BabakMN/followers",
            "following_url": "https://api.github.com/users/BabakMN/following{/other_user}",
            "gists_url": "https://api.github.com/users/BabakMN/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BabakMN/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BabakMN/subscriptions",
            "organizations_url": "https://api.github.com/users/BabakMN/orgs",
            "repos_url": "https://api.github.com/users/BabakMN/repos",
            "events_url": "https://api.github.com/users/BabakMN/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BabakMN/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-11T04:41:42Z",
        "updated_at": "2016-09-11T04:41:42Z",
        "author_association": "NONE",
        "body": "I think this issue should be highlighted somewhere on the documentation.\n\nThe following seems to work well for me both on client and server (thanks to people above):\n\n`Noscript.js`\n\n``` js\nimport React from 'react';\nimport ReactDOM from 'react-dom/server';\n\n\nexport default function Noscript(props) {\n\n    // https://github.com/facebook/react/issues/1252\n\n    const staticMarkup = ReactDOM.renderToStaticMarkup(\n        props.children\n    );\n\n    return <noscript dangerouslySetInnerHTML={{ __html: staticMarkup }} />;\n\n}\n\n```\n\nUsage:\n\n``` js\nimport Noscript from './Noscript.js';\n```\n\n``` jsx\n<Noscript>\n   <div className=\"noJavascript\">\n      <div>\n         <p>\n         Your browser has disabled Javascript. Please note this website requires Javsacript to function correctly.\n         </p>\n      </div>\n   </div>\n</Noscript>\n```\n"
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/comments/246177179",
        "html_url": "https://github.com/facebook/react/issues/1252#issuecomment-246177179",
        "issue_url": "https://api.github.com/repos/facebook/react/issues/1252",
        "id": 246177179,
        "user": {
            "login": "wchargin",
            "id": 4317806,
            "avatar_url": "https://avatars3.githubusercontent.com/u/4317806?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wchargin",
            "html_url": "https://github.com/wchargin",
            "followers_url": "https://api.github.com/users/wchargin/followers",
            "following_url": "https://api.github.com/users/wchargin/following{/other_user}",
            "gists_url": "https://api.github.com/users/wchargin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wchargin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wchargin/subscriptions",
            "organizations_url": "https://api.github.com/users/wchargin/orgs",
            "repos_url": "https://api.github.com/users/wchargin/repos",
            "events_url": "https://api.github.com/users/wchargin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wchargin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-11T12:15:02Z",
        "updated_at": "2016-09-11T12:15:02Z",
        "author_association": "NONE",
        "body": "@BabakMN This is a good first-order approximation (and I use it), but it has the severe limitation that you cannot nest `Noscript`s; see #6204. This destroys local reasoning. If this approach is highlighted in the documentation, then either #6204 must be either fixed or the documentation must warn aggressively about this.\n"
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/comments/246209892",
        "html_url": "https://github.com/facebook/react/issues/1252#issuecomment-246209892",
        "issue_url": "https://api.github.com/repos/facebook/react/issues/1252",
        "id": 246209892,
        "user": {
            "login": "BabakMN",
            "id": 888936,
            "avatar_url": "https://avatars3.githubusercontent.com/u/888936?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BabakMN",
            "html_url": "https://github.com/BabakMN",
            "followers_url": "https://api.github.com/users/BabakMN/followers",
            "following_url": "https://api.github.com/users/BabakMN/following{/other_user}",
            "gists_url": "https://api.github.com/users/BabakMN/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BabakMN/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BabakMN/subscriptions",
            "organizations_url": "https://api.github.com/users/BabakMN/orgs",
            "repos_url": "https://api.github.com/users/BabakMN/repos",
            "events_url": "https://api.github.com/users/BabakMN/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BabakMN/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-11T22:45:51Z",
        "updated_at": "2016-09-11T22:45:51Z",
        "author_association": "NONE",
        "body": "@wchargin I just dug into #6204, very interesting. I agree with you that squashing the `<noscript>` tags into one is the better behaviour.\n"
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/comments/341751910",
        "html_url": "https://github.com/facebook/react/issues/1252#issuecomment-341751910",
        "issue_url": "https://api.github.com/repos/facebook/react/issues/1252",
        "id": 341751910,
        "user": {
            "login": "gaearon",
            "id": 810438,
            "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-03T16:16:28Z",
        "updated_at": "2017-11-03T16:16:28Z",
        "author_association": "MEMBER",
        "body": "I believe React 16 doesn’t crash on this anymore, even though it produces a false positive warning.\r\nWe’ll track the warning in https://github.com/facebook/react/issues/11423."
    }
]